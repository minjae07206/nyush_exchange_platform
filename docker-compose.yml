version: '3.8'

services:
  frontend:
    build:
      context: ./nyush_exchange_platform_frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"  # Map port 80 inside container to port 80 on host
    networks:
      - app-network
    environment:
      - HOST_NAME=http://localhost:5000  # Set backend URL for frontend

  backend:
    build:
      context: ./nyush_exchange_platform_backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"  # Map port 3001 inside container to port 3001 on host
    networks:
      - app-network
    environment:
      - DB_HOST=${DB_HOST}  # Name of your database service
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
    depends_on:
      - postgres  # Wait for the database to be ready before starting the backend

  postgres:
    image: postgres:13  # Use the official PostgreSQL image
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    ports:
      - "5432:5432"  # Map the PostgreSQL port to the host machine
    networks:
      - app-network
    volumes:
      - postgres-data:/var/lib/postgresql/data  # Persist database data in a named volume

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:  # Define the named volume for database data
  uploads:  # Define the named volume for image uploads